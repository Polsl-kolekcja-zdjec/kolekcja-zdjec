//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace WpfKolekcjaZdjec.Entities
{
    public partial class PhotoCollectionDatabaseEntities : ObjectContext
    {
        public const string ConnectionString = "name=PhotoCollectionDatabaseEntities";
        public const string ContainerName = "PhotoCollectionDatabaseEntities";
    
        #region Constructors
    
        public PhotoCollectionDatabaseEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public PhotoCollectionDatabaseEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public PhotoCollectionDatabaseEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<Tag> TagSet
        {
            get { return _tagSet  ?? (_tagSet = CreateObjectSet<Tag>("TagSet")); }
        }
        private ObjectSet<Tag> _tagSet;
    
        public ObjectSet<Photo> PhotoSet
        {
            get { return _photoSet  ?? (_photoSet = CreateObjectSet<Photo>("PhotoSet")); }
        }
        private ObjectSet<Photo> _photoSet;
    
        public ObjectSet<SavedReport> SavedReportSet
        {
            get { return _savedReportSet  ?? (_savedReportSet = CreateObjectSet<SavedReport>("SavedReportSet")); }
        }
        private ObjectSet<SavedReport> _savedReportSet;
    
        public ObjectSet<ReportsHistory> ReportsHistorySet
        {
            get { return _reportsHistorySet  ?? (_reportsHistorySet = CreateObjectSet<ReportsHistory>("ReportsHistorySet")); }
        }
        private ObjectSet<ReportsHistory> _reportsHistorySet;
    
        public ObjectSet<Archive> ArchiveSet
        {
            get { return _archiveSet  ?? (_archiveSet = CreateObjectSet<Archive>("ArchiveSet")); }
        }
        private ObjectSet<Archive> _archiveSet;
    
        public ObjectSet<BaseAttributes> BaseAttributesSet
        {
            get { return _baseAttributesSet  ?? (_baseAttributesSet = CreateObjectSet<BaseAttributes>("BaseAttributesSet")); }
        }
        private ObjectSet<BaseAttributes> _baseAttributesSet;

        #endregion
    }
}
