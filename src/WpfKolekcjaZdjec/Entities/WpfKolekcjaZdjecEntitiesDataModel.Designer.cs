//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WpfKolekcjaZdjecEntitiesDataModel", "TagTag", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WpfKolekcjaZdjec.Entities.Tag), "Tag1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WpfKolekcjaZdjec.Entities.Tag))]
[assembly: EdmRelationshipAttribute("WpfKolekcjaZdjecEntitiesDataModel", "TagPhoto", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WpfKolekcjaZdjec.Entities.Tag), "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WpfKolekcjaZdjec.Entities.Photo))]
[assembly: EdmRelationshipAttribute("WpfKolekcjaZdjecEntitiesDataModel", "SavedReportReportsHistory", "SavedReport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WpfKolekcjaZdjec.Entities.SavedReport), "ReportsHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WpfKolekcjaZdjec.Entities.ReportsHistory))]
[assembly: EdmRelationshipAttribute("WpfKolekcjaZdjecEntitiesDataModel", "PhotoArchive", "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WpfKolekcjaZdjec.Entities.Photo), "Archive", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WpfKolekcjaZdjec.Entities.Archive))]
[assembly: EdmRelationshipAttribute("WpfKolekcjaZdjecEntitiesDataModel", "ArchivePhoto", "Archive", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WpfKolekcjaZdjec.Entities.Archive), "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WpfKolekcjaZdjec.Entities.Photo))]
[assembly: EdmRelationshipAttribute("WpfKolekcjaZdjecEntitiesDataModel", "BaseAttributesPhoto", "BaseAttributes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WpfKolekcjaZdjec.Entities.BaseAttributes), "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WpfKolekcjaZdjec.Entities.Photo))]

#endregion

namespace WpfKolekcjaZdjec.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WpfKolekcjaZdjecEntitiesDataModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WpfKolekcjaZdjecEntitiesDataModelContainer object using the connection string found in the 'WpfKolekcjaZdjecEntitiesDataModelContainer' section of the application configuration file.
        /// </summary>
        public WpfKolekcjaZdjecEntitiesDataModelContainer() : base("name=WpfKolekcjaZdjecEntitiesDataModelContainer", "WpfKolekcjaZdjecEntitiesDataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WpfKolekcjaZdjecEntitiesDataModelContainer object.
        /// </summary>
        public WpfKolekcjaZdjecEntitiesDataModelContainer(string connectionString) : base(connectionString, "WpfKolekcjaZdjecEntitiesDataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WpfKolekcjaZdjecEntitiesDataModelContainer object.
        /// </summary>
        public WpfKolekcjaZdjecEntitiesDataModelContainer(EntityConnection connection) : base(connection, "WpfKolekcjaZdjecEntitiesDataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> TagSet
        {
            get
            {
                if ((_TagSet == null))
                {
                    _TagSet = base.CreateObjectSet<Tag>("TagSet");
                }
                return _TagSet;
            }
        }
        private ObjectSet<Tag> _TagSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Photo> PhotoSet
        {
            get
            {
                if ((_PhotoSet == null))
                {
                    _PhotoSet = base.CreateObjectSet<Photo>("PhotoSet");
                }
                return _PhotoSet;
            }
        }
        private ObjectSet<Photo> _PhotoSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SavedReport> SavedReportSet
        {
            get
            {
                if ((_SavedReportSet == null))
                {
                    _SavedReportSet = base.CreateObjectSet<SavedReport>("SavedReportSet");
                }
                return _SavedReportSet;
            }
        }
        private ObjectSet<SavedReport> _SavedReportSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportsHistory> ReportsHistorySet
        {
            get
            {
                if ((_ReportsHistorySet == null))
                {
                    _ReportsHistorySet = base.CreateObjectSet<ReportsHistory>("ReportsHistorySet");
                }
                return _ReportsHistorySet;
            }
        }
        private ObjectSet<ReportsHistory> _ReportsHistorySet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Archive> ArchiveSet
        {
            get
            {
                if ((_ArchiveSet == null))
                {
                    _ArchiveSet = base.CreateObjectSet<Archive>("ArchiveSet");
                }
                return _ArchiveSet;
            }
        }
        private ObjectSet<Archive> _ArchiveSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BaseAttributes> BaseAttributesSet
        {
            get
            {
                if ((_BaseAttributesSet == null))
                {
                    _BaseAttributesSet = base.CreateObjectSet<BaseAttributes>("BaseAttributesSet");
                }
                return _BaseAttributesSet;
            }
        }
        private ObjectSet<BaseAttributes> _BaseAttributesSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TagSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTagSet(Tag tag)
        {
            base.AddObject("TagSet", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhotoSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotoSet(Photo photo)
        {
            base.AddObject("PhotoSet", photo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SavedReportSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSavedReportSet(SavedReport savedReport)
        {
            base.AddObject("SavedReportSet", savedReport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportsHistorySet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportsHistorySet(ReportsHistory reportsHistory)
        {
            base.AddObject("ReportsHistorySet", reportsHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ArchiveSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArchiveSet(Archive archive)
        {
            base.AddObject("ArchiveSet", archive);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BaseAttributesSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBaseAttributesSet(BaseAttributes baseAttributes)
        {
            base.AddObject("BaseAttributesSet", baseAttributes);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="Archive")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(HddDirectory))]
    [KnownTypeAttribute(typeof(Pendrive))]
    [KnownTypeAttribute(typeof(CardReader))]
    [KnownTypeAttribute(typeof(ReadOnlyArchive))]
    [KnownTypeAttribute(typeof(DigitalCamera))]
    public abstract partial class Archive : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VolumeName
        {
            get
            {
                return _VolumeName;
            }
            set
            {
                OnVolumeNameChanging(value);
                ReportPropertyChanging("VolumeName");
                _VolumeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VolumeName");
                OnVolumeNameChanged();
            }
        }
        private global::System.String _VolumeName;
        partial void OnVolumeNameChanging(global::System.String value);
        partial void OnVolumeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WpfKolekcjaZdjecEntitiesDataModel", "PhotoArchive", "Photo")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("WpfKolekcjaZdjecEntitiesDataModel.PhotoArchive", "Photo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("WpfKolekcjaZdjecEntitiesDataModel.PhotoArchive", "Photo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("WpfKolekcjaZdjecEntitiesDataModel.PhotoArchive", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("WpfKolekcjaZdjecEntitiesDataModel.PhotoArchive", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WpfKolekcjaZdjecEntitiesDataModel", "ArchivePhoto", "Photo")]
        public EntityCollection<Photo> Photo_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("WpfKolekcjaZdjecEntitiesDataModel.ArchivePhoto", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("WpfKolekcjaZdjecEntitiesDataModel.ArchivePhoto", "Photo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="BaseAttributes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(StandardAttributes))]
    [KnownTypeAttribute(typeof(ExifParameters))]
    public abstract partial class BaseAttributes : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BitsPerPixel
        {
            get
            {
                return _BitsPerPixel;
            }
            set
            {
                OnBitsPerPixelChanging(value);
                ReportPropertyChanging("BitsPerPixel");
                _BitsPerPixel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BitsPerPixel");
                OnBitsPerPixelChanged();
            }
        }
        private global::System.Int16 _BitsPerPixel;
        partial void OnBitsPerPixelChanging(global::System.Int16 value);
        partial void OnBitsPerPixelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Hash
        {
            get
            {
                return _Hash;
            }
            set
            {
                OnHashChanging(value);
                ReportPropertyChanging("Hash");
                _Hash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Hash");
                OnHashChanged();
            }
        }
        private global::System.String _Hash;
        partial void OnHashChanging(global::System.String value);
        partial void OnHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.Int64 _Height;
        partial void OnHeightChanging(global::System.Int64 value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Int64 _Width;
        partial void OnWidthChanging(global::System.Int64 value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Int16 _Rate = 0;
        partial void OnRateChanging(global::System.Int16 value);
        partial void OnRateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WpfKolekcjaZdjecEntitiesDataModel", "BaseAttributesPhoto", "Photo")]
        public EntityCollection<Photo> Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("WpfKolekcjaZdjecEntitiesDataModel.BaseAttributesPhoto", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("WpfKolekcjaZdjecEntitiesDataModel.BaseAttributesPhoto", "Photo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="CardReader")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CardReader : Archive
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CardReader object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="volumeName">Initial value of the VolumeName property.</param>
        /// <param name="capacity">Initial value of the Capacity property.</param>
        /// <param name="hddLetter">Initial value of the HddLetter property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        public static CardReader CreateCardReader(global::System.Int32 id, global::System.String volumeName, global::System.Int64 capacity, global::System.String hddLetter, global::System.String deviceId)
        {
            CardReader cardReader = new CardReader();
            cardReader.Id = id;
            cardReader.VolumeName = volumeName;
            cardReader.Capacity = capacity;
            cardReader.HddLetter = hddLetter;
            cardReader.DeviceId = deviceId;
            return cardReader;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.Int64 _Capacity;
        partial void OnCapacityChanging(global::System.Int64 value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HddLetter
        {
            get
            {
                return _HddLetter;
            }
            set
            {
                OnHddLetterChanging(value);
                ReportPropertyChanging("HddLetter");
                _HddLetter = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HddLetter");
                OnHddLetterChanged();
            }
        }
        private global::System.String _HddLetter;
        partial void OnHddLetterChanging(global::System.String value);
        partial void OnHddLetterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private global::System.String _DeviceId;
        partial void OnDeviceIdChanging(global::System.String value);
        partial void OnDeviceIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="DigitalCamera")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DigitalCamera : Archive
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DigitalCamera object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="volumeName">Initial value of the VolumeName property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        public static DigitalCamera CreateDigitalCamera(global::System.Int32 id, global::System.String volumeName, global::System.String deviceId)
        {
            DigitalCamera digitalCamera = new DigitalCamera();
            digitalCamera.Id = id;
            digitalCamera.VolumeName = volumeName;
            digitalCamera.DeviceId = deviceId;
            return digitalCamera;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private global::System.String _DeviceId;
        partial void OnDeviceIdChanging(global::System.String value);
        partial void OnDeviceIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="ExifParameters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExifParameters : BaseAttributes
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExifParameters object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="author">Initial value of the Author property.</param>
        /// <param name="bitsPerPixel">Initial value of the BitsPerPixel property.</param>
        /// <param name="hash">Initial value of the Hash property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        public static ExifParameters CreateExifParameters(global::System.Int32 id, global::System.String author, global::System.Int16 bitsPerPixel, global::System.String hash, global::System.Int64 height, global::System.Int64 width)
        {
            ExifParameters exifParameters = new ExifParameters();
            exifParameters.Id = id;
            exifParameters.Author = author;
            exifParameters.BitsPerPixel = bitsPerPixel;
            exifParameters.Hash = hash;
            exifParameters.Height = height;
            exifParameters.Width = width;
            return exifParameters;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdditionalParametersXML
        {
            get
            {
                return _AdditionalParametersXML;
            }
            set
            {
                OnAdditionalParametersXMLChanging(value);
                ReportPropertyChanging("AdditionalParametersXML");
                _AdditionalParametersXML = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdditionalParametersXML");
                OnAdditionalParametersXMLChanged();
            }
        }
        private global::System.String _AdditionalParametersXML;
        partial void OnAdditionalParametersXMLChanging(global::System.String value);
        partial void OnAdditionalParametersXMLChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="HddDirectory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HddDirectory : Archive
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HddDirectory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="volumeName">Initial value of the VolumeName property.</param>
        /// <param name="capacity">Initial value of the Capacity property.</param>
        /// <param name="isExternal">Initial value of the IsExternal property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        /// <param name="hddLetter">Initial value of the HddLetter property.</param>
        public static HddDirectory CreateHddDirectory(global::System.Int32 id, global::System.String volumeName, global::System.Int64 capacity, global::System.Boolean isExternal, global::System.String deviceId, global::System.String hddLetter)
        {
            HddDirectory hddDirectory = new HddDirectory();
            hddDirectory.Id = id;
            hddDirectory.VolumeName = volumeName;
            hddDirectory.Capacity = capacity;
            hddDirectory.IsExternal = isExternal;
            hddDirectory.DeviceId = deviceId;
            hddDirectory.HddLetter = hddLetter;
            return hddDirectory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.Int64 _Capacity;
        partial void OnCapacityChanging(global::System.Int64 value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsExternal
        {
            get
            {
                return _IsExternal;
            }
            set
            {
                OnIsExternalChanging(value);
                ReportPropertyChanging("IsExternal");
                _IsExternal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExternal");
                OnIsExternalChanged();
            }
        }
        private global::System.Boolean _IsExternal;
        partial void OnIsExternalChanging(global::System.Boolean value);
        partial void OnIsExternalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private global::System.String _DeviceId;
        partial void OnDeviceIdChanging(global::System.String value);
        partial void OnDeviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HddLetter
        {
            get
            {
                return _HddLetter;
            }
            set
            {
                OnHddLetterChanging(value);
                ReportPropertyChanging("HddLetter");
                _HddLetter = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HddLetter");
                OnHddLetterChanged();
            }
        }
        private global::System.String _HddLetter;
        partial void OnHddLetterChanging(global::System.String value);
        partial void OnHddLetterChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="Pendrive")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pendrive : Archive
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pendrive object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="volumeName">Initial value of the VolumeName property.</param>
        /// <param name="capacity">Initial value of the Capacity property.</param>
        /// <param name="hddLetter">Initial value of the HddLetter property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        public static Pendrive CreatePendrive(global::System.Int32 id, global::System.String volumeName, global::System.Int64 capacity, global::System.String hddLetter, global::System.String deviceId)
        {
            Pendrive pendrive = new Pendrive();
            pendrive.Id = id;
            pendrive.VolumeName = volumeName;
            pendrive.Capacity = capacity;
            pendrive.HddLetter = hddLetter;
            pendrive.DeviceId = deviceId;
            return pendrive;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.Int64 _Capacity;
        partial void OnCapacityChanging(global::System.Int64 value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HddLetter
        {
            get
            {
                return _HddLetter;
            }
            set
            {
                OnHddLetterChanging(value);
                ReportPropertyChanging("HddLetter");
                _HddLetter = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HddLetter");
                OnHddLetterChanged();
            }
        }
        private global::System.String _HddLetter;
        partial void OnHddLetterChanging(global::System.String value);
        partial void OnHddLetterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private global::System.String _DeviceId;
        partial void OnDeviceIdChanging(global::System.String value);
        partial void OnDeviceIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="Photo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Photo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        /// <param name="filePath">Initial value of the FilePath property.</param>
        /// <param name="thumbnailPath">Initial value of the ThumbnailPath property.</param>
        public static Photo CreatePhoto(global::System.Int32 id, global::System.Byte[] filename, global::System.String filePath, global::System.Byte[] thumbnailPath)
        {
            Photo photo = new Photo();
            photo.Id = id;
            photo.Filename = filename;
            photo.FilePath = filePath;
            photo.ThumbnailPath = thumbnailPath;
            return photo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Filename
        {
            get
            {
                return StructuralObject.GetValidValue(_Filename);
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.Byte[] _Filename;
        partial void OnFilenameChanging(global::System.Byte[] value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilePath
        {
            get
            {
                return _FilePath;
            }
            set
            {
                OnFilePathChanging(value);
                ReportPropertyChanging("FilePath");
                _FilePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilePath");
                OnFilePathChanged();
            }
        }
        private global::System.String _FilePath;
        partial void OnFilePathChanging(global::System.String value);
        partial void OnFilePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ThumbnailPath
        {
            get
            {
                return StructuralObject.GetValidValue(_ThumbnailPath);
            }
            set
            {
                OnThumbnailPathChanging(value);
                ReportPropertyChanging("ThumbnailPath");
                _ThumbnailPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ThumbnailPath");
                OnThumbnailPathChanged();
            }
        }
        private global::System.Byte[] _ThumbnailPath;
        partial void OnThumbnailPathChanging(global::System.Byte[] value);
        partial void OnThumbnailPathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WpfKolekcjaZdjecEntitiesDataModel", "TagPhoto", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("WpfKolekcjaZdjecEntitiesDataModel.TagPhoto", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("WpfKolekcjaZdjecEntitiesDataModel.TagPhoto", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("WpfKolekcjaZdjecEntitiesDataModel.TagPhoto", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("WpfKolekcjaZdjecEntitiesDataModel.TagPhoto", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WpfKolekcjaZdjecEntitiesDataModel", "PhotoArchive", "Archive")]
        public EntityCollection<Archive> Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Archive>("WpfKolekcjaZdjecEntitiesDataModel.PhotoArchive", "Archive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Archive>("WpfKolekcjaZdjecEntitiesDataModel.PhotoArchive", "Archive", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WpfKolekcjaZdjecEntitiesDataModel", "ArchivePhoto", "Archive")]
        public Archive Archives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Archive>("WpfKolekcjaZdjecEntitiesDataModel.ArchivePhoto", "Archive").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Archive>("WpfKolekcjaZdjecEntitiesDataModel.ArchivePhoto", "Archive").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Archive> ArchivesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Archive>("WpfKolekcjaZdjecEntitiesDataModel.ArchivePhoto", "Archive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Archive>("WpfKolekcjaZdjecEntitiesDataModel.ArchivePhoto", "Archive", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WpfKolekcjaZdjecEntitiesDataModel", "BaseAttributesPhoto", "BaseAttributes")]
        public BaseAttributes Attributes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseAttributes>("WpfKolekcjaZdjecEntitiesDataModel.BaseAttributesPhoto", "BaseAttributes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseAttributes>("WpfKolekcjaZdjecEntitiesDataModel.BaseAttributesPhoto", "BaseAttributes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BaseAttributes> AttributesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseAttributes>("WpfKolekcjaZdjecEntitiesDataModel.BaseAttributesPhoto", "BaseAttributes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BaseAttributes>("WpfKolekcjaZdjecEntitiesDataModel.BaseAttributesPhoto", "BaseAttributes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="ReadOnlyArchive")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReadOnlyArchive : Archive
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReadOnlyArchive object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="volumeName">Initial value of the VolumeName property.</param>
        /// <param name="capacity">Initial value of the Capacity property.</param>
        /// <param name="discLetter">Initial value of the DiscLetter property.</param>
        /// <param name="discType">Initial value of the DiscType property.</param>
        public static ReadOnlyArchive CreateReadOnlyArchive(global::System.Int32 id, global::System.String volumeName, global::System.Int64 capacity, global::System.String discLetter, global::System.String discType)
        {
            ReadOnlyArchive readOnlyArchive = new ReadOnlyArchive();
            readOnlyArchive.Id = id;
            readOnlyArchive.VolumeName = volumeName;
            readOnlyArchive.Capacity = capacity;
            readOnlyArchive.DiscLetter = discLetter;
            readOnlyArchive.DiscType = discType;
            return readOnlyArchive;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.Int64 _Capacity;
        partial void OnCapacityChanging(global::System.Int64 value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscLetter
        {
            get
            {
                return _DiscLetter;
            }
            set
            {
                OnDiscLetterChanging(value);
                ReportPropertyChanging("DiscLetter");
                _DiscLetter = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscLetter");
                OnDiscLetterChanged();
            }
        }
        private global::System.String _DiscLetter;
        partial void OnDiscLetterChanging(global::System.String value);
        partial void OnDiscLetterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscType
        {
            get
            {
                return _DiscType;
            }
            set
            {
                OnDiscTypeChanging(value);
                ReportPropertyChanging("DiscType");
                _DiscType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscType");
                OnDiscTypeChanged();
            }
        }
        private global::System.String _DiscType;
        partial void OnDiscTypeChanging(global::System.String value);
        partial void OnDiscTypeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="ReportsHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportsHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportsHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="useDate">Initial value of the UseDate property.</param>
        public static ReportsHistory CreateReportsHistory(global::System.Int32 id, global::System.Byte[] content, global::System.DateTime useDate)
        {
            ReportsHistory reportsHistory = new ReportsHistory();
            reportsHistory.Id = id;
            reportsHistory.Content = content;
            reportsHistory.UseDate = useDate;
            return reportsHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Content
        {
            get
            {
                return StructuralObject.GetValidValue(_Content);
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.Byte[] _Content;
        partial void OnContentChanging(global::System.Byte[] value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UseDate
        {
            get
            {
                return _UseDate;
            }
            set
            {
                OnUseDateChanging(value);
                ReportPropertyChanging("UseDate");
                _UseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UseDate");
                OnUseDateChanged();
            }
        }
        private global::System.DateTime _UseDate;
        partial void OnUseDateChanging(global::System.DateTime value);
        partial void OnUseDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WpfKolekcjaZdjecEntitiesDataModel", "SavedReportReportsHistory", "SavedReport")]
        public SavedReport SavedReport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SavedReport>("WpfKolekcjaZdjecEntitiesDataModel.SavedReportReportsHistory", "SavedReport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SavedReport>("WpfKolekcjaZdjecEntitiesDataModel.SavedReportReportsHistory", "SavedReport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SavedReport> SavedReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SavedReport>("WpfKolekcjaZdjecEntitiesDataModel.SavedReportReportsHistory", "SavedReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SavedReport>("WpfKolekcjaZdjecEntitiesDataModel.SavedReportReportsHistory", "SavedReport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="SavedReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SavedReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SavedReport object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="query">Initial value of the Query property.</param>
        public static SavedReport CreateSavedReport(global::System.Int32 id, global::System.String name, global::System.DateTime creationDate, global::System.String query)
        {
            SavedReport savedReport = new SavedReport();
            savedReport.Id = id;
            savedReport.Name = name;
            savedReport.CreationDate = creationDate;
            savedReport.Query = query;
            return savedReport;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Query
        {
            get
            {
                return _Query;
            }
            set
            {
                OnQueryChanging(value);
                ReportPropertyChanging("Query");
                _Query = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Query");
                OnQueryChanged();
            }
        }
        private global::System.String _Query;
        partial void OnQueryChanging(global::System.String value);
        partial void OnQueryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsUserDefined
        {
            get
            {
                return _IsUserDefined;
            }
            set
            {
                OnIsUserDefinedChanging(value);
                ReportPropertyChanging("IsUserDefined");
                _IsUserDefined = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUserDefined");
                OnIsUserDefinedChanged();
            }
        }
        private global::System.Boolean _IsUserDefined = true;
        partial void OnIsUserDefinedChanging(global::System.Boolean value);
        partial void OnIsUserDefinedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WpfKolekcjaZdjecEntitiesDataModel", "SavedReportReportsHistory", "ReportsHistory")]
        public EntityCollection<ReportsHistory> ReportsHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportsHistory>("WpfKolekcjaZdjecEntitiesDataModel.SavedReportReportsHistory", "ReportsHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportsHistory>("WpfKolekcjaZdjecEntitiesDataModel.SavedReportReportsHistory", "ReportsHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="StandardAttributes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StandardAttributes : BaseAttributes
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StandardAttributes object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="author">Initial value of the Author property.</param>
        /// <param name="bitsPerPixel">Initial value of the BitsPerPixel property.</param>
        /// <param name="hash">Initial value of the Hash property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        public static StandardAttributes CreateStandardAttributes(global::System.Int32 id, global::System.String author, global::System.Int16 bitsPerPixel, global::System.String hash, global::System.Int64 height, global::System.Int64 width)
        {
            StandardAttributes standardAttributes = new StandardAttributes();
            standardAttributes.Id = id;
            standardAttributes.Author = author;
            standardAttributes.BitsPerPixel = bitsPerPixel;
            standardAttributes.Hash = hash;
            standardAttributes.Height = height;
            standardAttributes.Width = width;
            return standardAttributes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdditionalParametersXML
        {
            get
            {
                return _AdditionalParametersXML;
            }
            set
            {
                OnAdditionalParametersXMLChanging(value);
                ReportPropertyChanging("AdditionalParametersXML");
                _AdditionalParametersXML = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdditionalParametersXML");
                OnAdditionalParametersXMLChanged();
            }
        }
        private global::System.String _AdditionalParametersXML;
        partial void OnAdditionalParametersXMLChanging(global::System.String value);
        partial void OnAdditionalParametersXMLChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WpfKolekcjaZdjecEntitiesDataModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Tag CreateTag(global::System.Int32 id, global::System.DateTime creationDate, global::System.String name)
        {
            Tag tag = new Tag();
            tag.Id = id;
            tag.CreationDate = creationDate;
            tag.Name = name;
            return tag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IconPath
        {
            get
            {
                return _IconPath;
            }
            set
            {
                OnIconPathChanging(value);
                ReportPropertyChanging("IconPath");
                _IconPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IconPath");
                OnIconPathChanged();
            }
        }
        private global::System.String _IconPath;
        partial void OnIconPathChanging(global::System.String value);
        partial void OnIconPathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WpfKolekcjaZdjecEntitiesDataModel", "TagTag", "Tag1")]
        public EntityCollection<Tag> Tag_SubTags_Hierarchy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("WpfKolekcjaZdjecEntitiesDataModel.TagTag", "Tag1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("WpfKolekcjaZdjecEntitiesDataModel.TagTag", "Tag1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WpfKolekcjaZdjecEntitiesDataModel", "TagTag", "Tag")]
        public Tag Tag_ParentTag_Hierarchy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("WpfKolekcjaZdjecEntitiesDataModel.TagTag", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("WpfKolekcjaZdjecEntitiesDataModel.TagTag", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> Tag_ParentTag_HierarchyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("WpfKolekcjaZdjecEntitiesDataModel.TagTag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("WpfKolekcjaZdjecEntitiesDataModel.TagTag", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WpfKolekcjaZdjecEntitiesDataModel", "TagPhoto", "Photo")]
        public EntityCollection<Photo> Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("WpfKolekcjaZdjecEntitiesDataModel.TagPhoto", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("WpfKolekcjaZdjecEntitiesDataModel.TagPhoto", "Photo", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
